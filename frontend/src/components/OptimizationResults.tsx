import React from 'react';
import type { OptimizationResult, OptimizationStatus } from '../types/promptAnalyzer';

interface ExportData {
    original_prompt: string;
    optimized_prompt: string;
    optimization_metadata?: {
        timestamp: string;
        model?: string;
        provider?: string;
        iterations?: number;
    };
}

interface OptimizationResultsProps {
    optimizationStatus: OptimizationStatus;
    optimizationResult: OptimizationResult | null;
}

const OptimizationResults: React.FC<OptimizationResultsProps> = ({
    optimizationStatus,
    optimizationResult
}) => {
    if (optimizationStatus !== 'success' || !optimizationResult) {
        return null;
    }

    const formatAsJSON = (): string => {
        const exportData: ExportData = {
            original_prompt: optimizationResult.original_prompt,
            optimized_prompt: optimizationResult.optimized_prompt,
            optimization_metadata: {
                timestamp: new Date().toISOString(),
                model: 'DSPy Optimized',
                iterations: 5 // Default value, could be passed as prop if available
            }
        };
        return JSON.stringify(exportData, null, 2);
    };

    const formatAsPython = (): string => {
        const pythonScript = `"""
Optimized Prompt generated by Prompt Engineering Studio
Generated on: ${new Date().toISOString()}
"""

# Original Prompt:
ORIGINAL_PROMPT = """${optimizationResult.original_prompt.replace(/"""/g, '\\"\\"\\"')}"""

# Optimized Prompt:
OPTIMIZED_PROMPT = """${optimizationResult.optimized_prompt.replace(/"""/g, '\\"\\"\\"')}"""

# Usage example:
def use_optimized_prompt():
    \"\"\"
    Example of how to use the optimized prompt in your application.
    \"\"\"
    prompt = OPTIMIZED_PROMPT
    # Use with your preferred LLM API (OpenAI, Anthropic, etc.)
    return prompt

if __name__ == "__main__":
    print("Optimized Prompt:")
    print("=" * 50)
    print(OPTIMIZED_PROMPT)
    print("=" * 50)
    print(f"\\nOriginal prompt length: {len(ORIGINAL_PROMPT)}")
    print(f"Optimized prompt length: {len(OPTIMIZED_PROMPT)}")
`;
        return pythonScript;
    };

    const downloadFile = (content: string, filename: string, mimeType: string) => {
        const blob = new Blob([content], { type: mimeType });
        const url = URL.createObjectURL(blob);
        const link = document.createElement('a');
        link.href = url;
        link.download = filename;
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        URL.revokeObjectURL(url);
    };

    const handleExportJSON = () => {
        const jsonContent = formatAsJSON();
        downloadFile(jsonContent, 'optimized_prompt.json', 'application/json');
    };

    const handleExportPython = () => {
        const pythonContent = formatAsPython();
        downloadFile(pythonContent, 'optimized_prompt.py', 'text/plain');
    };

    return (
        <div className="optimization-results" style={{
            width: '100%',
            padding: '2rem',
            borderRadius: '16px',
            animation: 'fadeIn 0.3s ease-in-out, glow 2s ease-in-out infinite alternate',
            background: 'linear-gradient(135deg, var(--background-panel), var(--background-card))',
            border: '3px solid var(--primary-accent)',
            boxShadow: '0 0 30px rgba(13, 142, 255, 0.4)',
            marginTop: '1.5rem',
            marginBottom: '1rem',
            position: 'relative',
            boxSizing: 'border-box',
            overflow: 'visible'
        }}>
            <div style={{
                position: 'absolute',
                top: '-3px',
                left: '-3px',
                right: '-3px',
                height: '6px',
                background: 'linear-gradient(90deg, var(--primary-accent), var(--primary-accent-hover), var(--primary-accent))',
                borderRadius: '16px 16px 0 0',
                animation: 'pulse 1.5s ease-in-out infinite'
            }} />
            <h2 className="sub-header" style={{
                textAlign: 'center',
                marginBottom: '1.5rem',
                color: 'var(--primary-accent)',
                fontSize: '1.5rem',
                fontWeight: '800',
                textShadow: '0 2px 8px rgba(13, 142, 255, 0.5)',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                gap: '1rem'
            }}>
                <span style={{
                    fontSize: '1.8rem',
                    animation: 'bounce 2s ease-in-out infinite'
                }}>üöÄ</span>
                Optimization Complete
            </h2>
            <div className="optimization-results-grid">
                <div style={{ textAlign: 'center' }}>
                    <h4 className="result-header">üìù Original Prompt</h4>
                    <pre className="prompt-box">{optimizationResult.original_prompt}</pre>
                </div>
                <div style={{ textAlign: 'center' }}>
                    <h4 className="result-header">‚ú® Optimized Prompt</h4>
                    <pre className="prompt-box">{optimizationResult.optimized_prompt}</pre>
                </div>
            </div>

            {/* Export Options */}
            <div style={{
                marginTop: '2rem',
                padding: '1.5rem',
                backgroundColor: 'var(--background-dark)',
                borderRadius: '12px',
                border: '1px solid var(--border-color)',
                textAlign: 'center'
            }}>
                <h4 style={{
                    margin: '0 0 1rem 0',
                    color: 'var(--primary-accent)',
                    fontSize: '1.1rem',
                    fontWeight: '600'
                }}>
                    üì• Export Options
                </h4>
                <div style={{
                    display: 'flex',
                    gap: '1rem',
                    justifyContent: 'center',
                    flexWrap: 'wrap'
                }}>
                    <button
                        onClick={handleExportJSON}
                        style={{
                            backgroundColor: 'var(--primary-accent)',
                            color: 'white',
                            border: 'none',
                            padding: '0.75rem 1.5rem',
                            borderRadius: '8px',
                            fontSize: '0.9rem',
                            fontWeight: '600',
                            cursor: 'pointer',
                            transition: 'all 0.2s ease',
                            display: 'flex',
                            alignItems: 'center',
                            gap: '0.5rem'
                        }}
                        onMouseEnter={(e) => e.currentTarget.style.backgroundColor = 'var(--primary-accent-hover)'}
                        onMouseLeave={(e) => e.currentTarget.style.backgroundColor = 'var(--primary-accent)'}
                    >
                        üìÑ Export as JSON
                    </button>

                    <button
                        onClick={handleExportPython}
                        style={{
                            backgroundColor: 'var(--primary-accent)',
                            color: 'white',
                            border: 'none',
                            padding: '0.75rem 1.5rem',
                            borderRadius: '8px',
                            fontSize: '0.9rem',
                            fontWeight: '600',
                            cursor: 'pointer',
                            transition: 'all 0.2s ease',
                            display: 'flex',
                            alignItems: 'center',
                            gap: '0.5rem'
                        }}
                        onMouseEnter={(e) => e.currentTarget.style.backgroundColor = 'var(--primary-accent-hover)'}
                        onMouseLeave={(e) => e.currentTarget.style.backgroundColor = 'var(--primary-accent)'}
                    >
                        üêç Export as Python
                    </button>
                </div>

                <div style={{
                    marginTop: '1rem',
                    fontSize: '0.8rem',
                    color: 'var(--text-secondary)'
                }}>
                    üí° Export your optimized prompt for use in other applications or save for later reference
                </div>
            </div>
        </div>
    );
};

export default OptimizationResults;